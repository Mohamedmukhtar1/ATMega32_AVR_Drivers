
ATMega32_AVR_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002d0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000324  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000354  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000390  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000942  00000000  00000000  000003f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000065e  00000000  00000000  00000d3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000593  00000000  00000000  00001398  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  0000192c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000453  00000000  00000000  000019c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000543  00000000  00000000  00001e17  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  0000235a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
 * Author : Eng- Mohamed Mokhtar
 */ 
#include "main.h"
int main(void)
{
    MCAL_GPIO_Init_Pin_Mode(GPIOD, GPIO_PIN_0, GPIO_OUTPUT);
  6c:	41 e0       	ldi	r20, 0x01	; 1
  6e:	60 e0       	ldi	r22, 0x00	; 0
  70:	84 e0       	ldi	r24, 0x04	; 4
  72:	0e 94 72 00 	call	0xe4	; 0xe4 <MCAL_GPIO_Init_Pin_Mode>
    MCAL_GPIO_Init_Pin_Mode(GPIOD, GPIO_PIN_1, GPIO_OUTPUT);
  76:	41 e0       	ldi	r20, 0x01	; 1
  78:	61 e0       	ldi	r22, 0x01	; 1
  7a:	84 e0       	ldi	r24, 0x04	; 4
  7c:	0e 94 72 00 	call	0xe4	; 0xe4 <MCAL_GPIO_Init_Pin_Mode>
    MCAL_GPIO_Init_Pin_Mode(GPIOD, GPIO_PIN_2, GPIO_OUTPUT);
  80:	41 e0       	ldi	r20, 0x01	; 1
  82:	62 e0       	ldi	r22, 0x02	; 2
  84:	84 e0       	ldi	r24, 0x04	; 4
  86:	0e 94 72 00 	call	0xe4	; 0xe4 <MCAL_GPIO_Init_Pin_Mode>
    MCAL_GPIO_Init_Pin_Mode(GPIOD, GPIO_PIN_3, GPIO_OUTPUT);
  8a:	41 e0       	ldi	r20, 0x01	; 1
  8c:	63 e0       	ldi	r22, 0x03	; 3
  8e:	84 e0       	ldi	r24, 0x04	; 4
  90:	0e 94 72 00 	call	0xe4	; 0xe4 <MCAL_GPIO_Init_Pin_Mode>
    MCAL_GPIO_Init_Pin_Mode(GPIOD, GPIO_PIN_4, GPIO_OUTPUT);
  94:	41 e0       	ldi	r20, 0x01	; 1
  96:	64 e0       	ldi	r22, 0x04	; 4
  98:	84 e0       	ldi	r24, 0x04	; 4
  9a:	0e 94 72 00 	call	0xe4	; 0xe4 <MCAL_GPIO_Init_Pin_Mode>
    MCAL_GPIO_Init_Pin_Mode(GPIOD, GPIO_PIN_5, GPIO_OUTPUT);
  9e:	41 e0       	ldi	r20, 0x01	; 1
  a0:	65 e0       	ldi	r22, 0x05	; 5
  a2:	84 e0       	ldi	r24, 0x04	; 4
  a4:	0e 94 72 00 	call	0xe4	; 0xe4 <MCAL_GPIO_Init_Pin_Mode>
    MCAL_GPIO_Init_Pin_Mode(GPIOD, GPIO_PIN_6, GPIO_OUTPUT);
  a8:	41 e0       	ldi	r20, 0x01	; 1
  aa:	66 e0       	ldi	r22, 0x06	; 6
  ac:	84 e0       	ldi	r24, 0x04	; 4
  ae:	0e 94 72 00 	call	0xe4	; 0xe4 <MCAL_GPIO_Init_Pin_Mode>
    MCAL_GPIO_Init_Pin_Mode(GPIOD, GPIO_PIN_7, GPIO_OUTPUT);
  b2:	41 e0       	ldi	r20, 0x01	; 1
  b4:	67 e0       	ldi	r22, 0x07	; 7
  b6:	84 e0       	ldi	r24, 0x04	; 4
  b8:	0e 94 72 00 	call	0xe4	; 0xe4 <MCAL_GPIO_Init_Pin_Mode>
	
	U8 i =0;
	for(i =0; i<8; i++)
  bc:	c0 e0       	ldi	r28, 0x00	; 0
  be:	0f c0       	rjmp	.+30     	; 0xde <main+0x72>
	{
		MCAL_GPIO_Write_Pin(GPIOD, i, GPIO_HIGH);
  c0:	41 e0       	ldi	r20, 0x01	; 1
  c2:	6c 2f       	mov	r22, r28
  c4:	84 e0       	ldi	r24, 0x04	; 4
  c6:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <MCAL_GPIO_Write_Pin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ca:	2f ef       	ldi	r18, 0xFF	; 255
  cc:	89 e6       	ldi	r24, 0x69	; 105
  ce:	98 e1       	ldi	r25, 0x18	; 24
  d0:	21 50       	subi	r18, 0x01	; 1
  d2:	80 40       	sbci	r24, 0x00	; 0
  d4:	90 40       	sbci	r25, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x64>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x6e>
  da:	00 00       	nop
    MCAL_GPIO_Init_Pin_Mode(GPIOD, GPIO_PIN_5, GPIO_OUTPUT);
    MCAL_GPIO_Init_Pin_Mode(GPIOD, GPIO_PIN_6, GPIO_OUTPUT);
    MCAL_GPIO_Init_Pin_Mode(GPIOD, GPIO_PIN_7, GPIO_OUTPUT);
	
	U8 i =0;
	for(i =0; i<8; i++)
  dc:	cf 5f       	subi	r28, 0xFF	; 255
  de:	c8 30       	cpi	r28, 0x08	; 8
  e0:	78 f3       	brcs	.-34     	; 0xc0 <main+0x54>
  e2:	ff cf       	rjmp	.-2      	; 0xe2 <main+0x76>

000000e4 <MCAL_GPIO_Init_Pin_Mode>:
 * @retval 					-none
 * Note						-none
 */
void MCAL_GPIO_Init_Pin_Mode(U8 GPIOx, U8 GPIO_PIN_x, U8 Pin_Config_IO)
{
	switch (GPIOx)
  e4:	82 30       	cpi	r24, 0x02	; 2
  e6:	31 f1       	breq	.+76     	; 0x134 <MCAL_GPIO_Init_Pin_Mode+0x50>
  e8:	18 f4       	brcc	.+6      	; 0xf0 <MCAL_GPIO_Init_Pin_Mode+0xc>
  ea:	81 30       	cpi	r24, 0x01	; 1
  ec:	39 f0       	breq	.+14     	; 0xfc <MCAL_GPIO_Init_Pin_Mode+0x18>
  ee:	08 95       	ret
  f0:	83 30       	cpi	r24, 0x03	; 3
  f2:	e1 f1       	breq	.+120    	; 0x16c <MCAL_GPIO_Init_Pin_Mode+0x88>
  f4:	84 30       	cpi	r24, 0x04	; 4
  f6:	09 f4       	brne	.+2      	; 0xfa <MCAL_GPIO_Init_Pin_Mode+0x16>
  f8:	54 c0       	rjmp	.+168    	; 0x1a2 <MCAL_GPIO_Init_Pin_Mode+0xbe>
  fa:	08 95       	ret
	{
		case GPIOA:
			switch(Pin_Config_IO)
  fc:	44 23       	and	r20, r20
  fe:	71 f0       	breq	.+28     	; 0x11c <MCAL_GPIO_Init_Pin_Mode+0x38>
 100:	41 30       	cpi	r20, 0x01	; 1
 102:	09 f0       	breq	.+2      	; 0x106 <MCAL_GPIO_Init_Pin_Mode+0x22>
 104:	68 c0       	rjmp	.+208    	; 0x1d6 <MCAL_GPIO_Init_Pin_Mode+0xf2>
			{
				case GPIO_OUTPUT:
				SET_BIT(REG_DDRA, GPIO_PIN_x);
 106:	2a b3       	in	r18, 0x1a	; 26
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	02 c0       	rjmp	.+4      	; 0x112 <MCAL_GPIO_Init_Pin_Mode+0x2e>
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	6a 95       	dec	r22
 114:	e2 f7       	brpl	.-8      	; 0x10e <MCAL_GPIO_Init_Pin_Mode+0x2a>
 116:	82 2b       	or	r24, r18
 118:	8a bb       	out	0x1a, r24	; 26
				break;
 11a:	08 95       	ret
				case GPIO_INPUT:
				CLR_BIT(REG_DDRA, GPIO_PIN_x);
 11c:	2a b3       	in	r18, 0x1a	; 26
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <MCAL_GPIO_Init_Pin_Mode+0x44>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <MCAL_GPIO_Init_Pin_Mode+0x40>
 12c:	80 95       	com	r24
 12e:	82 23       	and	r24, r18
 130:	8a bb       	out	0x1a, r24	; 26
				break;
 132:	08 95       	ret
				default:
				break;
			}
		break;
		case GPIOB:
			switch(Pin_Config_IO)
 134:	44 23       	and	r20, r20
 136:	71 f0       	breq	.+28     	; 0x154 <MCAL_GPIO_Init_Pin_Mode+0x70>
 138:	41 30       	cpi	r20, 0x01	; 1
 13a:	09 f0       	breq	.+2      	; 0x13e <MCAL_GPIO_Init_Pin_Mode+0x5a>
 13c:	4c c0       	rjmp	.+152    	; 0x1d6 <MCAL_GPIO_Init_Pin_Mode+0xf2>
			{
				case GPIO_OUTPUT:
				SET_BIT(REG_DDRB, GPIO_PIN_x);
 13e:	27 b3       	in	r18, 0x17	; 23
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	02 c0       	rjmp	.+4      	; 0x14a <MCAL_GPIO_Init_Pin_Mode+0x66>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	6a 95       	dec	r22
 14c:	e2 f7       	brpl	.-8      	; 0x146 <MCAL_GPIO_Init_Pin_Mode+0x62>
 14e:	82 2b       	or	r24, r18
 150:	87 bb       	out	0x17, r24	; 23
				break;
 152:	08 95       	ret
				case GPIO_INPUT:
				CLR_BIT(REG_DDRB, GPIO_PIN_x);
 154:	27 b3       	in	r18, 0x17	; 23
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <MCAL_GPIO_Init_Pin_Mode+0x7c>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <MCAL_GPIO_Init_Pin_Mode+0x78>
 164:	80 95       	com	r24
 166:	82 23       	and	r24, r18
 168:	87 bb       	out	0x17, r24	; 23
				break;
 16a:	08 95       	ret
				default:
				break;
			}
		break;
		case GPIOC:
			switch(Pin_Config_IO)
 16c:	44 23       	and	r20, r20
 16e:	69 f0       	breq	.+26     	; 0x18a <MCAL_GPIO_Init_Pin_Mode+0xa6>
 170:	41 30       	cpi	r20, 0x01	; 1
 172:	89 f5       	brne	.+98     	; 0x1d6 <MCAL_GPIO_Init_Pin_Mode+0xf2>
			{
				case GPIO_OUTPUT:
				SET_BIT(REG_DDRC, GPIO_PIN_x);
 174:	24 b3       	in	r18, 0x14	; 20
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	02 c0       	rjmp	.+4      	; 0x180 <MCAL_GPIO_Init_Pin_Mode+0x9c>
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	6a 95       	dec	r22
 182:	e2 f7       	brpl	.-8      	; 0x17c <MCAL_GPIO_Init_Pin_Mode+0x98>
 184:	82 2b       	or	r24, r18
 186:	84 bb       	out	0x14, r24	; 20
				break;
 188:	08 95       	ret
				case GPIO_INPUT:
				CLR_BIT(REG_DDRC, GPIO_PIN_x);
 18a:	24 b3       	in	r18, 0x14	; 20
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	02 c0       	rjmp	.+4      	; 0x196 <MCAL_GPIO_Init_Pin_Mode+0xb2>
 192:	88 0f       	add	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	6a 95       	dec	r22
 198:	e2 f7       	brpl	.-8      	; 0x192 <MCAL_GPIO_Init_Pin_Mode+0xae>
 19a:	80 95       	com	r24
 19c:	82 23       	and	r24, r18
 19e:	84 bb       	out	0x14, r24	; 20
				break;
 1a0:	08 95       	ret
				default:
				break;
			}
		break;
		case GPIOD:
			switch(Pin_Config_IO)
 1a2:	44 23       	and	r20, r20
 1a4:	69 f0       	breq	.+26     	; 0x1c0 <MCAL_GPIO_Init_Pin_Mode+0xdc>
 1a6:	41 30       	cpi	r20, 0x01	; 1
 1a8:	b1 f4       	brne	.+44     	; 0x1d6 <MCAL_GPIO_Init_Pin_Mode+0xf2>
			{
				case GPIO_OUTPUT:
				SET_BIT(REG_DDRD, GPIO_PIN_x);
 1aa:	21 b3       	in	r18, 0x11	; 17
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <MCAL_GPIO_Init_Pin_Mode+0xd2>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <MCAL_GPIO_Init_Pin_Mode+0xce>
 1ba:	82 2b       	or	r24, r18
 1bc:	81 bb       	out	0x11, r24	; 17
				break;
 1be:	08 95       	ret
				case GPIO_INPUT:
				CLR_BIT(REG_DDRD, GPIO_PIN_x);
 1c0:	21 b3       	in	r18, 0x11	; 17
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <MCAL_GPIO_Init_Pin_Mode+0xe8>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <MCAL_GPIO_Init_Pin_Mode+0xe4>
 1d0:	80 95       	com	r24
 1d2:	82 23       	and	r24, r18
 1d4:	81 bb       	out	0x11, r24	; 17
 1d6:	08 95       	ret

000001d8 <MCAL_GPIO_Write_Pin>:
 * @retval 					-none
 * Note						-none
 */
void MCAL_GPIO_Write_Pin(U8 GPIOx, U8 GPIO_PIN_x, U8 Pin_OP_State_HiLw)
{
	switch (GPIOx)
 1d8:	82 30       	cpi	r24, 0x02	; 2
 1da:	31 f1       	breq	.+76     	; 0x228 <MCAL_GPIO_Write_Pin+0x50>
 1dc:	18 f4       	brcc	.+6      	; 0x1e4 <MCAL_GPIO_Write_Pin+0xc>
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	39 f0       	breq	.+14     	; 0x1f0 <MCAL_GPIO_Write_Pin+0x18>
 1e2:	08 95       	ret
 1e4:	83 30       	cpi	r24, 0x03	; 3
 1e6:	e1 f1       	breq	.+120    	; 0x260 <MCAL_GPIO_Write_Pin+0x88>
 1e8:	84 30       	cpi	r24, 0x04	; 4
 1ea:	09 f4       	brne	.+2      	; 0x1ee <MCAL_GPIO_Write_Pin+0x16>
 1ec:	54 c0       	rjmp	.+168    	; 0x296 <MCAL_GPIO_Write_Pin+0xbe>
 1ee:	08 95       	ret
	{
		case GPIOA:
			switch(Pin_OP_State_HiLw)
 1f0:	44 23       	and	r20, r20
 1f2:	71 f0       	breq	.+28     	; 0x210 <MCAL_GPIO_Write_Pin+0x38>
 1f4:	41 30       	cpi	r20, 0x01	; 1
 1f6:	09 f0       	breq	.+2      	; 0x1fa <MCAL_GPIO_Write_Pin+0x22>
 1f8:	68 c0       	rjmp	.+208    	; 0x2ca <MCAL_GPIO_Write_Pin+0xf2>
			{
				case GPIO_HIGH:
				SET_BIT(REG_PORTA, GPIO_PIN_x);
 1fa:	2b b3       	in	r18, 0x1b	; 27
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <MCAL_GPIO_Write_Pin+0x2e>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	6a 95       	dec	r22
 208:	e2 f7       	brpl	.-8      	; 0x202 <MCAL_GPIO_Write_Pin+0x2a>
 20a:	82 2b       	or	r24, r18
 20c:	8b bb       	out	0x1b, r24	; 27
				break;
 20e:	08 95       	ret
				case GPIO_LOW:
				CLR_BIT(REG_PORTA, GPIO_PIN_x);
 210:	2b b3       	in	r18, 0x1b	; 27
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <MCAL_GPIO_Write_Pin+0x44>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <MCAL_GPIO_Write_Pin+0x40>
 220:	80 95       	com	r24
 222:	82 23       	and	r24, r18
 224:	8b bb       	out	0x1b, r24	; 27
				break;
 226:	08 95       	ret
				default:
				break;
			}
		break;
		case GPIOB:
			switch(Pin_OP_State_HiLw)
 228:	44 23       	and	r20, r20
 22a:	71 f0       	breq	.+28     	; 0x248 <MCAL_GPIO_Write_Pin+0x70>
 22c:	41 30       	cpi	r20, 0x01	; 1
 22e:	09 f0       	breq	.+2      	; 0x232 <MCAL_GPIO_Write_Pin+0x5a>
 230:	4c c0       	rjmp	.+152    	; 0x2ca <MCAL_GPIO_Write_Pin+0xf2>
			{
				case GPIO_HIGH:
				SET_BIT(REG_PORTB, GPIO_PIN_x);
 232:	28 b3       	in	r18, 0x18	; 24
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	02 c0       	rjmp	.+4      	; 0x23e <MCAL_GPIO_Write_Pin+0x66>
 23a:	88 0f       	add	r24, r24
 23c:	99 1f       	adc	r25, r25
 23e:	6a 95       	dec	r22
 240:	e2 f7       	brpl	.-8      	; 0x23a <MCAL_GPIO_Write_Pin+0x62>
 242:	82 2b       	or	r24, r18
 244:	88 bb       	out	0x18, r24	; 24
				break;
 246:	08 95       	ret
				case GPIO_LOW:
				CLR_BIT(REG_PORTB, GPIO_PIN_x);
 248:	28 b3       	in	r18, 0x18	; 24
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	02 c0       	rjmp	.+4      	; 0x254 <MCAL_GPIO_Write_Pin+0x7c>
 250:	88 0f       	add	r24, r24
 252:	99 1f       	adc	r25, r25
 254:	6a 95       	dec	r22
 256:	e2 f7       	brpl	.-8      	; 0x250 <MCAL_GPIO_Write_Pin+0x78>
 258:	80 95       	com	r24
 25a:	82 23       	and	r24, r18
 25c:	88 bb       	out	0x18, r24	; 24
				break;
 25e:	08 95       	ret
				default:
				break;
			}
		break;
		case GPIOC:
			switch(Pin_OP_State_HiLw)
 260:	44 23       	and	r20, r20
 262:	69 f0       	breq	.+26     	; 0x27e <MCAL_GPIO_Write_Pin+0xa6>
 264:	41 30       	cpi	r20, 0x01	; 1
 266:	89 f5       	brne	.+98     	; 0x2ca <MCAL_GPIO_Write_Pin+0xf2>
			{
				case GPIO_HIGH:
				SET_BIT(REG_PORTC, GPIO_PIN_x);
 268:	25 b3       	in	r18, 0x15	; 21
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	02 c0       	rjmp	.+4      	; 0x274 <MCAL_GPIO_Write_Pin+0x9c>
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	6a 95       	dec	r22
 276:	e2 f7       	brpl	.-8      	; 0x270 <MCAL_GPIO_Write_Pin+0x98>
 278:	82 2b       	or	r24, r18
 27a:	85 bb       	out	0x15, r24	; 21
				break;
 27c:	08 95       	ret
				case GPIO_LOW:
				CLR_BIT(REG_PORTC, GPIO_PIN_x);
 27e:	25 b3       	in	r18, 0x15	; 21
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	02 c0       	rjmp	.+4      	; 0x28a <MCAL_GPIO_Write_Pin+0xb2>
 286:	88 0f       	add	r24, r24
 288:	99 1f       	adc	r25, r25
 28a:	6a 95       	dec	r22
 28c:	e2 f7       	brpl	.-8      	; 0x286 <MCAL_GPIO_Write_Pin+0xae>
 28e:	80 95       	com	r24
 290:	82 23       	and	r24, r18
 292:	85 bb       	out	0x15, r24	; 21
				break;
 294:	08 95       	ret
				default:
				break;
			}
		break;
		case GPIOD:
			switch(Pin_OP_State_HiLw)
 296:	44 23       	and	r20, r20
 298:	69 f0       	breq	.+26     	; 0x2b4 <MCAL_GPIO_Write_Pin+0xdc>
 29a:	41 30       	cpi	r20, 0x01	; 1
 29c:	b1 f4       	brne	.+44     	; 0x2ca <MCAL_GPIO_Write_Pin+0xf2>
			{
				case GPIO_HIGH:
				SET_BIT(REG_PORTD, GPIO_PIN_x);
 29e:	22 b3       	in	r18, 0x12	; 18
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <MCAL_GPIO_Write_Pin+0xd2>
 2a6:	88 0f       	add	r24, r24
 2a8:	99 1f       	adc	r25, r25
 2aa:	6a 95       	dec	r22
 2ac:	e2 f7       	brpl	.-8      	; 0x2a6 <MCAL_GPIO_Write_Pin+0xce>
 2ae:	82 2b       	or	r24, r18
 2b0:	82 bb       	out	0x12, r24	; 18
				break;
 2b2:	08 95       	ret
				case GPIO_LOW:
				CLR_BIT(REG_PORTD, GPIO_PIN_x);
 2b4:	22 b3       	in	r18, 0x12	; 18
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <MCAL_GPIO_Write_Pin+0xe8>
 2bc:	88 0f       	add	r24, r24
 2be:	99 1f       	adc	r25, r25
 2c0:	6a 95       	dec	r22
 2c2:	e2 f7       	brpl	.-8      	; 0x2bc <MCAL_GPIO_Write_Pin+0xe4>
 2c4:	80 95       	com	r24
 2c6:	82 23       	and	r24, r18
 2c8:	82 bb       	out	0x12, r24	; 18
 2ca:	08 95       	ret

000002cc <_exit>:
 2cc:	f8 94       	cli

000002ce <__stop_program>:
 2ce:	ff cf       	rjmp	.-2      	; 0x2ce <__stop_program>
